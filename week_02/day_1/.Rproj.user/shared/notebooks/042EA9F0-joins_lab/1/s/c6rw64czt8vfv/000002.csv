"0","#find actors with more than one film, then join on roles and movies"
"0",""
"0","actors_more_than_once <- actors %>% "
"0","  filter(film_count > 1) %>% "
"0","  left_join(roles, by = c(""id"" = ""actor_id"")) %>% "
"0","  left_join(movies, by = c(""movie_id"" = ""id""))"
"0",""
"0","#find each actor's average rating"
"0","#first replace ""NULL"" with NA so that means can be calculated"
"0","#create a new column containing the actor's full name (to read output easily)"
"0",""
"0","actors_ave_ratings <- actors_more_than_once %>%"
"0","  #mutate(rank = na_if(rank, ""NULL"")) %>%"
"0","  unite(name, first_name:last_name, sep = "" "") %>% "
"0","  group_by(id) %>%"
"0","  summarise(name = name, ave_rating = mean(as.double(rank), na.rm = TRUE)) %>%"
"0","  ungroup() %>% "
"0","  distinct()"
"2","Warning in mean(as.double(rank), na.rm = TRUE) :"
"2","
 "
"2"," NAs introduced by coercion
"
"2","Warning in mean(as.double(rank), na.rm = TRUE) :"
"2","
 "
"2"," NAs introduced by coercion
"
"2","Warning in mean(as.double(rank), na.rm = TRUE) :"
"2","
 "
"2"," NAs introduced by coercion
"
"2","Warning in mean(as.double(rank), na.rm = TRUE) :"
"2","
 "
"2"," NAs introduced by coercion
"
"2","Warning in mean(as.double(rank), na.rm = TRUE) :"
"2","
 "
"2"," NAs introduced by coercion
"
"2","Warning in mean(as.double(rank), na.rm = TRUE) :"
"2","
 "
"2"," NAs introduced by coercion
"
"1","`summarise()` has grouped output by 'id'. You can override using the `.groups` argument.
"
"0","#get top five actors - keep ties"
"0",""
"0","top_five_actors <- slice_max(actors_ave_ratings, ave_rating, n = 5)"
"0",""
